#!/usr/bin/env bash

source config_init $@
set $args
if [ $test ];then echo "===RUNNING IN TEST MODE===";fi
infile="$src_folders/src_$1"
infile2="$src_dest_folders/src_dest_$1"
shift
raw_filter="$@"
if [ ! -z $update ];then source folderlist $set_name;fi

check_auto ()
{ if [ -z $auto ];then
    read -r -p "Run $action for all folders (y); select one (s); change filter (c); exit (e)? y/s/c/e: " resp
    if [ $resp == "s" ];then OLDIFS=$IFS;IFS=$'\n'
      select choice in $(echo -e "$src_list");do
        raw_filter="$choice"
        IFS=$OLDIFS
        filter_list
        break
      done      
    elif [ $resp == "c" ];then
      read -r -p "Change filter to: " raw_filter
      filter_list
    elif [ $resp == "y" ];then continue
    else exit;fi
  fi
}

filter_list ()
{ filter=`echo "$raw_filter" | sed -r 's/ /.*/g'`
  src_list=`cat $infile | grep -i -E "$filter"`
  if [ -z "$src_list" ];then
    echo -e "The filter \"$raw_filter\" does not match any folders in $infile. Try again"
  else
    echo -e "The filter matches:\n$src_list\n\n`echo "$src_list" | wc -l` folder(s) match filter\n"
    check_auto
  fi
}

run_foldercopy ()
{ cat $infile2 | grep -i -E "$filter" |\
  while IFS=$IFS1 read src dest; do
    if [ ! -z "$src" ];then
      if [ ! -z "$dest_" ];then dest="$dest_/${src/*\//}";fi
        if [ "$action" == "backend shortcut" ];then 
          src1=${src#*:};src="${src%:*}:"
          dest1=${dest#*:};dest="-o target=${dest%:*}:";fi
      if [ "$action" == "backend shortcut" ];then
        set -x;$test "$clone" $action "$src" "$src1" $dest "$dest1" $flags;set +x
      else
        set -x;$test "$clone" $action "$src" "$dest" $flags;set +x
      fi
    fi
  done
}

filter_list
run_foldercopy